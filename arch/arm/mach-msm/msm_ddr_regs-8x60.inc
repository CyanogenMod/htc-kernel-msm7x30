/*
 * Copyright (C) 2010 HTC, Inc.
 *
 * This software is licensed under the terms of the GNU General Public
 * License version 2, as published by the Free Software Foundation, and
 * may be copied, distributed, and modified under those terms.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 */

/*
	These are ddr registers and will be referenced in sysinfo-8x60.c
*/
REG(TOP_MISC_CNTL),
REG(TOP_PAD_CNTL),
REG(TOP_PAD_MDDR2_CNTL),
REG(TOP_PAD_MIF2_CNTL),
REG(PMON_AXI_CNTL),
REG(PMON_AXI_INTERRUPT),
REG(PMON_AXI_SOURCE_0),
REG(PMON_AXI_COUNT_0),
REG(PMON_AXI_SOURCE_1),
REG(PMON_AXI_COUNT_1),
REG(PMON_AXI_SOURCE_2),
REG(PMON_AXI_COUNT_2),
REG(PMON_AXI_SOURCE_3),
REG(PMON_AXI_COUNT_3),
REG(PMON_DDR_CNTL),
REG(PMON_DDR_INTERRUPT),
REG(PMON_DDR_SOURCE_0),
REG(PMON_DDR_COUNT_0),
REG(PMON_DDR_SOURCE_1),
REG(PMON_DDR_COUNT_1),
REG(PMON_DDR_SOURCE_2),
REG(PMON_DDR_COUNT_2),
REG(PMON_DDR_SOURCE_3),
REG(PMON_DDR_COUNT_3),
REG(SLV_CONFIG),
REG(SLV_RD_CONFIG),
REG(SLV_RD_STATUS),
REG(SLV_WR_CONFIG),
REG(SLV_FLUSH_CONFIG),
REG(SLV_ID_REVISION),
/* The n is related to ddr chip number, we only have cs0 and cs1 now.
   Do not map all registers.
 */
/*
REG(SLV_ADDR_BASE_CSn),(n)
REG(SLV_ADDR_MAP_CSn),(n)
REG(SLV_ADDR_SIZE_MASK_CSn),(n)
*/
/* cs0 */
REGI(SLV_ADDR_BASE_CSn, 0),
REGI(SLV_ADDR_MAP_CSn, 0),
REGI(SLV_ADDR_SIZE_MASK_CSn, 0),
/* cs1 */
REGI(SLV_ADDR_BASE_CSn, 1),
REGI(SLV_ADDR_MAP_CSn, 1),
REGI(SLV_ADDR_SIZE_MASK_CSn, 1),

REG(SLV_STALL),
REG(SLV_ERR_ADDR),
REG(SLV_ERR_APACKET_0),
REG(SLV_ERR_APACKET_1),
REG(SLV_ERR_CNTL),
REG(SLV_PMON_CFG_ACHAN),
REG(SLV_PMON_CFG_0),
REG(SLV_TEST_CONFIG),
/* These should be general purpose regisers, skip them. */
/*
REG(MPU_PRTn_RACR),(n)
REG(MPU_PRTn_WACR),(n)
REG(MPU_PRTn_START),(n)
REG(MPU_PRTn_END),(n)
*/
REG(MPU_CR),
REG(MPU_EAR),
REG(MPU_ESR),
REG(MPU_ESRRESTORE),
REG(MPU_ESYNR0),
REG(MPU_ESYNR1),
REG(MPU_REV),
REG(MPU_IDR),
REG(MPU_MPU_ACR),
REG(DDR_DEVICE_CONFIG),
REG(DDR_DEVICE_STATUS),
REG(DDR_MANUAL_CMD),
REG(DDR_MR_CNTL_WDATA),
REG(DDR_MR_RDATA_RANK0),
REG(DDR_MR_RDATA_RANK1),
REG(DDR_MRR_REPEAT),
REG(DDR_MRR_REPEAT_DATA_RANK0),
REG(DDR_MRR_REPEAT_DATA_RANK1),
REG(DDR_CMD_EXEC_OPT_0),
REG(DDR_CMD_EXEC_OPT_1),
REG(DDR_CMD_EXEC_OPT_2),
REG(DDR_CMD_EXEC_OPT_3),
REG(DDR_SM_TIMING_0),
REG(DDR_SM_TIMING_1),
REG(DDR_DRAM_TIMING_0),
REG(DDR_DRAM_TIMING_1),
REG(DDR_DRAM_TIMING_2),
REG(DDR_DRAM_TIMING_3),
REG(DDR_DRAM_TIMING_4),
REG(DDR_DRAM_TIMING_5),
REG(DDR_DRAM_TIMING_6),
REG(DDR_DRAM_TIMING_7),
REG(DDR_DRAM_TIMING_0_ALT),
REG(DDR_DRAM_TIMING_3_ALT),
REG(DDR_DRAM_TIMING_4_ALT),
REG(DDR_DRAM_TIMING_5_ALT),
REG(DDR_DRAM_TIMING_7_ALT),
REG(DDR_AUTO_RFSH_CNTL),
REG(DDR_SELF_RFSH_CNTL),
REG(DDR_PMON_EVENT_CNTL0),
REG(DDR_PMON_EVENT0_MID_MATCH),
REG(DDR_PMON_EVENT_CNTL1),
REG(DDR_PMON_EVENT1_MID_MATCH),
REG(DDR_PMON_EVENT_CNTL2),
REG(DDR_PMON_EVENT2_MID_MATCH),
REG(DDR_PMON_EVENT_CNTL3),
REG(DDR_PMON_EVENT3_MID_MATCH),
REG(DDR_PMON_EVENT_CNTL4),
REG(DDR_PMON_EVENT_CNTL5),
REG(DDR_TEST_MUX),
REG(CDC_CFG_MST),
REG(CDC_CFG_MST_OSC),
REG(CDC_CFG_SLV_A),
REG(CDC_CFG_SLV_D),
REG(CDC_STATUS_MST),
REG(CDC_STATUS_SLV),
REG(CDC_CMD),
REG(CDC_CAL_CNTL),
REG(CDC_CAL_TIMER),
REG(CDC_CFG_MST_OSC_ALT),
REG(CDC_STATUS_MST_ALT),
REG(CDC_CFG_SLV_ALT),
REG(CDC_STATUS_SLV_1),
REG(CDC_STATUS_SLV_2),
REG(CDC_STATUS_SLV_3),
REG(LBST_CNTL),
REG(LBST_MISR_CA),
REG(LBST_MISR_DQ_EVEN),
REG(LBST_MISR_DQ_ODD),
REG(LBST_COUNT_CA_ALL),
REG(LBST_COUNT_CA_CMPR),
REG(LBST_COUNT_DQ_ALL),
REG(LBST_COUNT_DQ_CMPR),
REG(LBST_ENABLE_IE_CA),
REG(LBST_ENABLE_OE_CA),
REG(LBST_ENABLE_IEOE_DQ),
REG(LBST_ENABLE_IEOE_DMDQS),
REG(LBST_CMPR_VAL_CA_EVEN),
REG(LBST_CMPR_VAL_CA_ODD),
REG(LBST_CMPR_EN_CA_EVEN),
REG(LBST_CMPR_EN_CA_ODD),
REG(LBST_CNTL2),
REG(IOCAL_CNTL),
REG(IOCAL_STATUS),
REG(IOCAL_PNCNT_INIT),
REG(IOCAL_PNCNT_SET),
REG(IOCAL_TIMER),
REG(IOCAL_CHAR),
